spring.application.name=app
# Note:All secrets/passwords must be mapped from key-vault or so
# Kafka-spring properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.source-topic=source-topic
spring.kafka.producer.topic=destination-topic
spring.kafka.consumer.group-id=app-group-id # it is useful while running in container
spring.kafka.consumer.group=app-group

# Key and value deserializers for consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Key and value serializers for producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# (Optional) Auto offset reset
spring.kafka.consumer.auto-offset-reset=earliest
# Enable SSL for Kafka
spring.kafka.properties.security.protocol=SSL

# Truststore configuration
spring.kafka.properties.ssl.truststore.location=classpath:ssl/kafka.truststore.jks
spring.kafka.properties.ssl.truststore.password=yourTruststorePassword

# Keystore configuration (for client authentication, if required)
spring.kafka.properties.ssl.keystore.location=classpath:ssl/kafka.keystore.jks
spring.kafka.properties.ssl.keystore.password=yourKeystorePassword
spring.kafka.properties.ssl.key.password=yourKeyPassword

# (Optional) Disable hostname verification if needed (not recommended for production)
# spring.kafka.properties.ssl.endpoint.identification.algorithm=

# Kafka-client properties
bootstrap-servers=localhost:9092
topic.source=source-topic
consumer.group=consumer-group
consumer.group.id=consumer-group-id
topic.destination=destination-topic
topic.dlq=dlq-topic
consumer.group.dlq=dlq-consumer-group

numberOfThreads=5